<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Equals,ToString,GetHashCode + XML documentation</Title>
			<Author>C.Small</Author>
			<Description>Adds an Equals,ToString and GetHashCode method to a class, with fully complete XML documentation.</Description>
			<HelpUrl />
			<Keywords />
			<SnippetTypes />
			<Shortcut>doceq</Shortcut>
		</Header>
		<Snippet>
			<Declarations>
				<Object Editable="True">
					<Type />
					<ID>ObjectName</ID>
					<ToolTip>The type of the object</ToolTip>
					<Default />
					<Function />
				</Object>
				<Object Editable="True">
					<Type />
					<ID>Id</ID>
					<ToolTip>The property to use for Equals comparison</ToolTip>
					<Default />
					<Function />
				</Object>
			</Declarations>
			<References />
			<Code Kind="any" Language="CSharp"><![CDATA[#region Equals,ToString,GetHashCode
/// <summary>
/// Determines whether two <c ref="$ObjectName$">$ObjectName$</c> objects are equal.
/// </summary>
/// <remarks>
/// For the two <c ref="$ObjectName$">$ObjectName$</c> objects to be equal, they must have the same $Id$.
/// </remarks>
/// <param name="obj">The <c ref="$ObjectName$">$ObjectName$</c> object to compare to the current <c ref="$ObjectName$">$ObjectName$</c>.</param>
/// <returns>True if the specified <c ref="$ObjectName$">$ObjectName$</c> is equal to the current <c ref="$ObjectName$">$ObjectName$</c>; otherwise false.</returns>
public override bool Equals(object obj)
		{
			return $Id$.Equals((($ObjectName$)obj).$Id$);
		}

/// <summary>
/// Displays information about the <c>$ObjectName$</c> in readable format.
/// </summary>
/// <remarks>
/// Below is an example of how the object is displayed:
/// <para><code>$ObjectName$ enter your display format here.</code></para>
/// </remarks>
/// <returns>A string representation of the object.</returns>
public override string ToString()
{
	return string.Format("$end$ Enter your display format here", "your params");
}

/// <summary>
/// Computes and retrieves a hash code for an object.
/// </summary>
/// <remarks>
/// This method implements the <see cref="Object">Object</see> method.
/// </remarks>
/// <returns>A hash code for an object.</returns>
public override int GetHashCode()
{
	return base.GetHashCode();
}
#endregion]]></Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>